% This file was created with JabRef 2.6.
% Encoding: Cp1252

@Misc{mediniqvt,
  OPTkey = 	 {},
  author = 	 {ikv++ technologies ag},
  title = 	 {medini QVT},
  url = {http://projects.ikv.de/qvt/},
  OPTmonth = 	 {},
  OPTyear = 	 {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@INPROCEEDINGS{Amstel2011_MtATL,
  author    = {M. F. van Amstel and M. G. J. van den Brand},
  title     = {{U}sing {M}etrics for {A}ssessing the {Q}uality of {ATL} {M}odel {T}ransformations},
  booktitle = {Proceedings of the Third International Workshop on Model Transformation with ATL (MtATL 2011)},
  editor    = {I. Kurtev and M. Tisi and D. Wagelaar},
  year      = {2011},
  month     = jul,
  pages     = {20--34},
  series    = {CEUR Workshop Proceedings},
  publisher = {CEUR-WS.org},
  volume    = {742},
  address   = {Zurich, Switzerland},
}


@InProceedings{cuadrado10,
  author = 	 {Jes`us S\`anchez Cuadrado},
  title = 	 {{A} {P}roposal to {I}mprove {P}erformance of {ATL} {C}ollections},
  booktitle = {Proceedings of the 2nd International Workshop on Model Transformation with ATL},
  editor = 	 {Marcos Didonet Del Fabro and Frédéric Jouault and Ivan Kurtev},
  volume = 	 {711},
  series = 	 {CEUR-WS}
}

@incollection {akehurst2006,
   author = {Akehurst, D. and Bordbar, B. and Evans, M. and Howells, W. and McDonald-Maier, K.},
   affiliation = {University of Kent},
   title = {SiTra: Simple Transformations in Java},
   booktitle = {Model Driven Engineering Languages and Systems},
   series = {Lecture Notes in Computer Science},
   editor = {Nierstrasz, Oscar and Whittle, Jon and Harel, David and Reggio, Gianna},
   publisher = {Springer Berlin / Heidelberg},
   isbn = {978-3-540-45772-5},
   keyword = {Computer Science},
   pages = {351-364},
   volume = {4199},
   url = {http://dx.doi.org/10.1007/11880240_25},
   note = {10.1007/11880240\_25},
   year = {2006}
}

@InProceedings{amstel2011,
          eprintid = {20427},
             month = {June},
      official_url = {http://dx.doi.org/10.1007/978-3-642-21732-6_14},
              issn = {0302-9743},
            author = {M. {van Amstel} and S. {Bosems} and I. {Kurtev} and L. {Ferreira Pires}},
         num_pages = {15},
            series = {Lecture Notes in Computer Science},
        pres_types = {Talk},
       ispublished = {Published},
            editor = {J. {Cabot} and E. {Visser}},
           address = {Berlin},
         publisher = {Springer Verlag},
         id_number = {10.1007/978-3-642-21732-6_14},
           isbn_13 = {978-3-642-21731-9},
      howpublished = {http://eprints.eemcs.utwente.nl/20427/},
            volume = {6707},
          location = {Zurich, Switzerland},
        event_type = {Conference},
       event_dates = {27-28 Jun 2011},
   research_groups = {EWI-SE: Software Engineering, EWI-IS: Information Systems},
         booktitle = {4th International Conference on Theory and Practice of Model Transformations, ICMT 2011, Zurich, Switzerland},
          refereed = {Yes},
  research_programs = {CTIT-ASSIST: Applied Science of Services for Information Society Technologies},
             title = {{P}erformance in {M}odel {T}ransformations: {E}xperiments with {ATL} and {QVT}},
          abstract = {Model transformations are increasingly being incorporated in software development processes. However, as systems being developed with transformations grow in size and complexity, the performance of the transformations tends to degrade. In this paper we investigate the factors that have an impact on the execution performance of model transformations. We analyze the performance of three model transformation language engines, namely ATL, QVT Operational Mappings and QVT Relations. We implemented solutions to two transformation problems in these languages and compared the performance of these transformations. We extracted metric values from the transformations to systematically analyze how their characteristics influence transformation execution performance. We also implemented a solution to a transformation problem in ATL in three functionally equivalent ways, but with different language constructs to evaluate the effect of language constructs on transformation performance. The results of this paper enable a transformation designer to estimate beforehand the performance of a transformation, and to choose among implementation alternatives to achieve the best performance. In addition, transformation engine developers may find some of our results useful in order to tune their tools for better performance.},
     international = {Yes},
              year = {2011},
             pages = {198--212}
}

@MastersThesis{bosems2011,
          eprintid = {20407},
      howpublished = {http://eprints.eemcs.utwente.nl/20407/},
             month = {March},
            author = {S. {Bosems}},
         num_pages = {80},
       supervisors = {I. {Kurtev} and L. {Ferreira Pires}},
   research_groups = {EWI-SE: Software Engineering},
            school = {University of Twente},
          abstract = {Model-Driven Engineering is a software development process that has gained popularity in the recent years. Unlike traditional software engineering processes, MDE is centered around models, instead of code. By using model transformations, models can be translated from one language to another, resulting in a separation of program architecture and execution platform. However, an increase in size of any of the elements required by the transformation process might lead to performance problems. Although these problems are common and well known in the eld of software engineering, problems specic to MDE have not yet been investigated in sucient depth.
In this research, we compare the performance of three model transformation engines. These tools allow the transformation of models to be specied in ATL, QVT Operational Mappings and QVT Relations. Furthermore, dierent implementation strategies are evaluated to determine how language constructs aect the performance of the model transformation process.

The implementation of model transformation engines determines the performance of the language. Increases of model size and complexity cause transformations to run slower, yet some transformation engines are aected more than others. ATL is the fastest performing language, followed by QVTo and QVTr in this order.

Language constructs often allow developers to dene the same model transformation in multiple ways. High metric values for the number of attribute helpers, and low values for the number of calls to allInstances() indicate better performance in ATL transformations. High values for the number of called rules metric suggests an imperative specication style, resulting in a negative impact on performance.

The results from this research allow transformation designers to estimate the perfor- mance of their transformation denitions. Developers of model transformation tools can use our results to improve the current version of their tools.},
             title = {A Performance Analysis of Model Transformations and Tools},
       institution = {University of Twente},
              year = {2011},
              url  = {http://eprints.eemcs.utwente.nl/20407/}
}

@inproceedings{KurtevB04,
  author    = {Ivan Kurtev and
               Klaas van den Berg},
  title     = {{M}istral: {A} {L}anguage for {M}odel {T}ransformations in the {MOF}
               {M}eta-modeling {A}rchitecture},
  booktitle = {MDAFA},
  year      = {2004},
  pages     = {139-158},
  ee        = {http://dx.doi.org/10.1007/11538097_10},
  crossref  = {DBLP:conf/mdafa/2004},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@proceedings{DBLP:conf/mdafa/2004,
  editor    = {Uwe A{\ss}mann and
               Mehmet Ak\c{s}it and
               Arend Rensink},
  title     = {Model Driven Architecture, European MDA Workshops: Foundations
               and Applications, MDAFA 2003 and MDAFA 2004, Twente, The
               Netherlands, June 26-27, 2003 and Link{\"o}ping, Sweden,
               June 10-11, 2004, Revised Selected Papers},
  booktitle = {MDAFA},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {3599},
  year      = {2005},
  isbn      = {3-540-28240-8},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}


@article{Kurtev10,
  author    = {Ivan Kurtev},
  title     = {{A}pplication of {R}eflection in a {M}odel {T}ransformation {L}anguage},
  journal   = {Software and System Modeling},
  volume    = {9},
  number    = {3},
  year      = {2010},
  pages     = {311-333},
  ee        = {http://dx.doi.org/10.1007/s10270-009-0138-z},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{jouault08,
  author    = {Fr{\'e}d{\'e}ric Jouault and
               Freddy Allilaire and
               Jean B{\'e}zivin and
               Ivan Kurtev},
  title     = {{ATL}: {A} {M}odel {T}ransformation {T}ool},
  journal   = {Sci. Comput. Program.},
  volume    = {72},
  number    = {1-2},
  year      = {2008},
  pages     = {31-39},
  ee        = {http://dx.doi.org/10.1016/j.scico.2007.08.002},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@inproceedings{jouault06,
 author = {Jouault, Fr\'{e}d\'{e}ric and Allilaire, Freddy and B\'{e}zivin, Jean and Kurtev, Ivan and Valduriez, Patrick},
 title = {{ATL}: {A} {QVT}-like {T}ransformation {L}anguage},
 booktitle = {Companion to the 21st ACM SIGPLAN symposium on Object-oriented programming systems, languages, and applications},
 series = {OOPSLA '06},
 year = {2006},
 isbn = {1-59593-491-X},
 location = {Portland, Oregon, USA},
 pages = {719--720},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/1176617.1176691},
 doi = {http://doi.acm.org/10.1145/1176617.1176691},
 acmid = {1176691},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {ATL, QVT, model transformation, model-driven engineering},
}


@BOOK{grady87,
  title = {Software metrics: establishing a company-wide program},
  publisher = {Prentice-Hall, Inc. Upper Saddle River, NJ, USA},
  year = {1987},
  author = {Grady, R. B. and Caswell, D. L.},
  annote = {Referenced by \cite{fenton98}, used here for the definition of a
	LOC. It is an overview of what motivated Hewlett-Packard to start
	using a software development metrics program.},
  citeulike-article-id = {4259040},
  crossref = {fenton98},
  posted-at = {2010-03-14 14:14:48},
  priority = {5}
}

@INPROCEEDINGS{joualt05,
  author = {Fr\'ed\'eric Jouault and Ivan Kurtev},
  title = {Transforming Models with {ATL}},
  booktitle = {{MoDELS Satallite Events}},
  year = {2005},
  pages = {128--138},
  crossref = {bruel06},
  ee = {http://dx.doi.org/10.1007/11663430_14},
  owner = {Steven},
  timestamp = {2010.07.30}
}

@TECHREPORT{adt,
  author = {Freddy Allilaire and Tarik Idrissi},
  title = {{ADT}: {E}clipse development tools for {ATL}},
  institution = {Universit'e de Nantes, {LINA}},
  year = {2004},
  file = {:F\:\\studie\\219997 - Graduation Project\\sources\\ATL\\ADT.pdf:PDF},
  owner = {Steven},
  timestamp = {2010.07.30},
  url = {http://atlanmod.emn.fr/www/papers/ADT\_AllilaireIdrissi.pdf}
}

@INPROCEEDINGS{Amstel2009,
  author       = {M. F. van Amstel and C. F. J. Lange and M. G. J. van den Brand},
  editor       = {Richard F. Paige},
  title        = {{U}sing {M}etrics for {A}ssessing the {Q}uality of {ASF}+{SDF} {M}odel {T}ransformations},
  booktitle    = {Proceedings of the Second International Conference on Model Transformation (ICMT'09)},
  year         = {2009},
  pages        = {239--248},
  publisher    = {Springer},
  series       = {Lecture Notes in Computer Science},
  volume       = {5563},
  month        = jun,
  address      = {Z\"urich, Switzerland},
}

@INPROCEEDINGS{amstel08,
  author = {Amstel, M.F. van and Lange, C.F.J. and Brand, M.G.J. van den},
  title = {Metrics for analyzing the quality of model transformations},
  booktitle = {{Quantitative Approaches in Object-Oriented Software Engineering}},
  year = {2008},
  editor = {Giovanni Falcone and Yann-Ga\"el Gu\'eh\'eneuc and Christian Lange
	and Zolt\'an Porkol\'ab and Houari A. Sahraoui},
  number = {12},
  series = {QAOOSE},
  pages = {41--51},
  owner = {Steven},
  timestamp = {2010.05.23}
}

@INPROCEEDINGS{bezivin03,
  author = {Jean B\'ezivin and Gr\'egoire Dup\'e and Fr\'ed\'eric Jouault and
	Gilles Pitette and Jamal Eddine Rougui},
  title = {First experiments with the {ATL} model transformation language: Transforming
	{XSLT} into {XQuery}},
  booktitle = {{OOPSLA} 2003 Workshop},
  year = {2003},
  address = {Anaheim, California},
  publisher = { },
  abstract = {ATL (Atlas Transformation Language) has been defined to perform general
	transformations within the MDA framework (Model Driven Architecture)
	recently proposed by the OMG. We are currently learning from the
	first applications developed with this language. The example used
	here is a transformation from XSLT to XQuery. Since these are two
	standard notations that dont pertain to the MDA space, we first need
	to provide some justification about this work. The global organization
	of technological spaces presented at the beginning of the paper is
	intended to answer this first question. Furthermore we propose the
	original characterization of a technological space as a framework
	based on a given unique metamodel. After having briefly presented
	the ATL framework, we describe the XSLT2XQuery transformation. We
	may then draw several conclusions from this experiment, suggesting
	possible improvements to general model transformation frameworks.
	ATL is still evolving since it is supposed to match the forthcoming
	QVT/RFP recommendation when it is ready. As a consequence, the concrete
	expression of the transformation presented in this paper may change,
	but the general ideas should remain stable.},
  authorurls = {http://www.sciences.univ-nantes.fr/lina/atl/contrib/bezivin and and
	http://www.sciences.univ-nantes.fr/lina/atl/contrib/jouault and and
	},
  url = {http://www.softmetaware.com/oopsla2003/bezivin.pdf}
}

@ARTICLE{bansiya02,
  author = {Jagdish Bansiya and Carl G. Davis},
  title = {A Hierarchical Model for Object-Oriented Design Quality Assessment},
  journal = {{IEEE Transactions on Software Engineering}},
  year = {2002},
  volume = {28},
  pages = {4--17},
  owner = {Steven},
  timestamp = {2010.09.17}
}

@MASTERSTHESIS{baroni02,
  author = {Aline L\'ucia Baroni},
  title = {Formal Definition of Object-Oriented Design Metrics},
  school = {Vrije Universiteit Brussel},
  year = {2002},
  file = {:F\:\\studie\\219997 - Graduation Project\\sources\\Formal Definition of Object-Oriented Design Metrics.pdf:PDF},
  owner = {Steven},
  timestamp = {2010.09.15}
}

@INPROCEEDINGS{baroni03,
  author = {Aline L\'ucia Baroni and Fernando Brito {e Abreu}},
  title = {A Formal Library for Aiding Metrics Extraction},
  booktitle = {International Workshop on Object-Oriented Re-Engineering},
  year = {2003},
  owner = {Steven},
  timestamp = {2010.09.17}
}

@ELECTRONIC{berard97,
  author = {Edward V. Berard},
  year = {1997},
  title = {Metrics for Object-Oriented Software Engineering},
  organization = {The Object Agency, Inc.},
  url = {http://www.ipipan.gda.pl/~marek/objects/TOA/moose.html},
  owner = {Steven},
  timestamp = {2010.09.17}
}

@MANUAL{cocomo2,
  title = {Software Cost Estimation with Cocomo II (with {CD-ROM})},
  author = {Boehm, Barry and Horowitz, Ellis and Madachy, Ray and Reifer, Donald
	and Clark, Bradford K. and Steece, Bert and Brown, Winsor A. and
	Chulani, Sunita and Abts, Chris},
  year = {2000},
  howpublished = {Hardcover},
  isbn = {0130266922},
  publisher = {{Prentice Hall PTR}},
  url = {http://www.worldcat.org/isbn/0130266922}
}

@INPROCEEDINGS{bondi00,
  author = {Bondi, Andr\'{e} B.},
  title = {Characteristics of scalability and their impact on performance},
  booktitle = {{WOSP} '00: Proceedings of the 2nd international workshop on Software
	and performance},
  year = {2000},
  pages = {195--203},
  address = {New York, NY, USA},
  publisher = {{ACM}},
  annote = {The author starts off by defining what scalability is and what different
	types of scalability we can identify:
	
	
	\begin{description}[\setlabelwidth{Space-time scalability}]
	
	\item[Load scalability] The ability of a system to function without
	undue delay, unproductive resource consumption, or resource contention
	at different loads.
	
	\item[Space scalability] The ability of a system to operate, without
	memory requirements grow to intolerable levels as the number of items
	it supports increases.
	
	\item[Space-time scalability] The system continues to function gracefully
	as the number of objects it encompasses increases by orders of magnitude.
	
	\item[Structural scalability] The implementation or standards do not
	impede the growth of the number of objects the system encompasses.
	
	\end{description}},
  doi = {http://doi.acm.org/10.1145/350391.350432},
  isbn = {1-58113-195-X},
  location = {Ottawa, Ontario, Canada}
}

@BOOK{umluserguide,
  title = {The {Unified Modeling Language} User Guide},
  publisher = {Addison Wesley},
  year = {1998},
  author = {Grady Booch and James Rumbaugh and Ivar Jacobson},
  owner = {Steven},
  timestamp = {2010.04.23}
}

@BOOK{brooks95,
  title = {The mythical man-month (anniversary ed.)},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  year = {1995},
  author = {Brooks,Jr., Frederick P.},
  address = {Boston, MA, USA},
  isbn = {0-201-83595-9}
}

@ARTICLE{chidamber94,
  author = {Shyam R. Chidamber and Chris F. Kemerer},
  title = {A metrics suite for object oriented design},
  journal = {{IEEE Transactions on Software Engineering}},
  year = {1994},
  volume = {20},
  pages = {476--493}
}

@ARTICLE{colangelo06,
  author = {Daniela Colangelo and Daniele Compare and Paola Inverardi and Patrizio
	Pelliccione},
  title = {Reducing Software Architecture Models Complexity: A Slicing and Abstraction
	Approach},
  journal = {Lecture Notes in Computer Science},
  year = {2006},
  volume = {4229},
  pages = {243--258},
  annote = {In order to reduce the complexity of software architecture descriptions,
	the authors propose a slicing algorithm (DepCol) to `cut off the
	unnecessary parts of the system'. The resulting model only focuses
	on one key part of the system. The current approach is not yet fully
	automated, which is subjected to further research.},
  owner = {Steven},
  timestamp = {2010.02.03}
}

@MISC{erichson10,
  author = {Gerald Erichsen},
  title = {Does Spanish have fewer words than English?},
  howpublished = {online},
  year = {2010},
  owner = {Steven},
  timestamp = {2010.04.27},
  url = {http://spanish.about.com/od/spanishvocabulary/a/size\_of\_spanish.htm}
}

@ELECTRONIC{fenton08,
  author = {Norman Fenton and Martin Neil and William Marsh and Peter Hearty
	and Lukasz {Radli\'nski} and Paul Krause},
  year = {2008},
  title = {On the effectiveness of early life cycle defect prediction with Bayesian
	Nets; [electronic resource].},
  annote = {The authors propose a ways of predicting software quality through
	the use of factors like `project complexity' and `scale of distributed
	communication'. A Bayesian Net model is used for this purpose. The
	purpose of the outcome of this model is to provide software engineering
	project managers with decision points that highly influence the success
	rate of their projects.},
  owner = {Steven},
  timestamp = {2010.02.03}
}

@BOOK{fenton98,
  title = {Software Metrics: A Rigorous and Practical Approach},
  publisher = {PWS Publishing Co.},
  year = {1998},
  author = {Fenton, Norman E. and Pfleeger, Shari L.},
  address = {Boston, MA, USA},
  abstract = {From the Publisher: The Second Edition of Software Metrics provides
	an up-to-date, coherent, and rigorous framework for controlling,
	managing, and predicting software development processes. With an
	emphasis on real-world applications, Fenton and Pfleeger apply basic
	ideas in measurement theory to quantify software development resources,
	processes, and products. The book offers an accessible and comprehensive
	introduction to software metrics, now an essential component of software
	engineering for both classroom and industry. Software Metrics features
	extensive case studies from Hewlett Packard, IBM, the U.S. Department
	of Defense, Motorola, and others, in addition to worked examples
	and exercises. The Second Edition includes up-to-date material on
	process maturity and measurement, goal-question-metric, planning
	a metrics program, measurement in practice, experimentation, empirical
	studies, ISO9216, and metric tools.},
  annote = {An introduction to software measurement theory, explaining different
	types of metrics, including pro's and con's.},
  citeulike-article-id = {888736},
  citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=580949},
  isbn = {0534954251},
  keywords = {measurement, metrics, software},
  posted-at = {2010-03-14 11:48:42},
  priority = {0},
  url = {http://portal.acm.org/citation.cfm?id=580949}
}

@BOOK{glass02,
  title = {Facts and fallacies of software engineering},
  publisher = {Addison Wesley},
  year = {2002},
  editor = {{Addison Wesley}},
  author = {Robert L. Glass},
  annote = {Glass sums up facts that are often forgotten or neglected while writing
	software or leading a software development project. He backs his
	facts up with well known sources.},
  owner = {Steven},
  timestamp = {2010.03.29}
}

@BOOK{grimes09,
  title = {Ethnologue: Languages of the World, Sixteenth edition},
  publisher = {SIL International},
  year = {2009},
  editor = {M. Paul Lewis},
  author = {Grimes, B.F. and Grimes, J.E.},
  owner = {Steven},
  timestamp = {2010.04.27}
}

@BOOK{halstead77,
  title = {Elements of software science (Operating and programming systems series)},
  publisher = {Elsevier},
  year = {1977},
  author = {Halstead, Maurice H.},
  annote = {Halstead describes size and complexity in terms that go beyond LOC.
	One of the first books to explore this field as such.},
  citeulike-article-id = {277441},
  citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0444002057},
  citeulike-linkout-1 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/0444002057},
  citeulike-linkout-2 = {http://www.amazon.co.uk/exec/obidos/ASIN/0444002057/citeulike00-21},
  citeulike-linkout-3 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0444002057},
  citeulike-linkout-4 = {http://www.worldcat.org/isbn/0444002057},
  citeulike-linkout-5 = {http://books.google.com/books?vid=ISBN0444002057},
  citeulike-linkout-6 = {http://www.amazon.com/gp/search?keywords=0444002057\&index=books\&linkCode=qs},
  citeulike-linkout-7 = {http://www.librarything.com/isbn/0444002057},
  howpublished = {Hardcover},
  isbn = {0444002057},
  posted-at = {2010-03-14 14:45:21},
  priority = {4},
  url = {http://www.worldcat.org/isbn/0444002057}
}

@ARTICLE{harrison98,
  author = {Harrison, R. and Counsell, S. J. and Nithi, R. V.},
  title = {An evaluation of the {MOOD} set of object-oriented software metrics},
  journal = {{IEEE Transactions on Software Engineering}},
  year = {1998},
  volume = {24},
  pages = {491--496},
  number = {6},
  doi = {10.1109/32.689404},
  owner = {Steven},
  timestamp = {2010.09.17}
}

@CONFERENCE{heijstek08,
  author = {W. Heijstek},
  title = {Empirical Investigations of Model Size, Complexity and Effort in
	a Large Scale, Distributed Model Driven Development Process},
  booktitle = {Software Engineering and Advanced Applications, 2009. {SEAA} '09.
	35th Euromicro Conference on 27-29 Aug. 2009},
  year = {2009},
  pages = {113--120},
  abstract = {Model driven development (MDD) is a software engineering practice
	that is gaining in popularity. We aim to investigate to what extend
	it is effective. There is a lack of empirical data to verify the
	pay-offs of employing MDD tools and techniques. In order to increase
	the knowledge we have of the impact of MDD in large scale industrial
	projects, we investigate the project characteristics of a large software
	development project in which MDD is used in a pure form.
	
	
	This study focuses on analyzing model size and complexity and metrics
	related to model quality and effort. Furthermore, project team members
	were asked to elaborate on their views on the impact of using MDD.
	Our findings include that larger models are more complex, contain
	more diagrams, are changed more often and worked on longer but do
	not necessarily contain more defects. However, models that are changed
	often do contain more defects. Benefits mentioned by team members
	were an increase in productivity, benefits from a consistent implementation
	and their perception of improvement of overall quality. Also, a reduction
	in complexity was attributed to the use of MDD techniques. We could
	confirm the perceived increase in the quality of the product in that
	the average amount of defects found is significantly lower than in
	similar size projects in which MDD was not employed.},
  annote = {Research into large scale, industrial MDD projects. Conclusions include:
	
	\begin{itemize}
	
	\item An absence of correlation between model size and complexity
	with defect count.
	
	\item Model size and average diagram size do correlate.
	
	\item Model size is correlated to average diagram complexity, but
	not to development effort.
	
	\item Larger models change more, yet do not necessarily contain more
	defects.
	
	\item Models that changed often do contain more defects.
	
	\item 59\% of effort was spent on developing models.
	
	\item MDD increases productivity and reduces complexity.
	
	\end{itemize}},
  owner = {Steven},
  timestamp = {2010.02.03}
}

@MISC{hennessy08,
  author = {Mark Hennessy and James F. Power},
  title = {Analysing the effectiveness of rule-coverage as a reduction criterion
	for test suites of grammar-based software},
  howpublished = {Online},
  year = {2008},
  abstract = {The term grammar-based software describes software whose input can
	
	be specified by a context-free grammar. This grammar may occur explicitly
	in the
	
	software, in the form of an input specification to a parser generator,
	or implicitly,
	
	in the form of a hand-written parser. Grammar-based software includes
	not only
	
	programming language compilers, but also tools for program analysis,
	reverse engineering,
	
	software metrics and documentation generation. Hence, ensuring their
	
	completeness and correctness is a vital prerequisite for their use.
	In this paper we
	
	propose a strategy for the construction of test suites for grammar
	based software, and
	
	illustrate this strategy using the ISO C++ grammar. We use the concept
	of grammar rule
	
	coverage as a pivot for the reduction of an implementation-based test
	suite, and
	
	demonstrate a significant decrease in the size of this suite. The
	effectiveness of this
	
	reduced test suite is compared to the original test suite with respect
	to code coverage
	
	and more importantly, fault detection. This work greatly expands upon
	previous
	
	work in this area and utilizes large scale mutation testing to compare
	the effectiveness
	
	of grammar-rule coverage to that of statement coverage as a reduction
	criterion
	
	for test suites of grammar-based software. This work finds that when
	grammar rule
	
	coverage is used as the sole criterion for reducing test suites of
	grammar based
	
	software, the fault detection capability of that reduced test suite
	is greatly diminished
	
	when compared to other coverage criteria such as statement coverage.},
  annote = {The authors aim to reduce the size of test-suites for grammar-based
	software (e.g. a program compiler and software metrics). They find
	that reduction based on rule coverage provides a significant reduction
	in the number of test cases. Another finding is that, although not
	formally proved, the reduction of test suites does not imply a reduction
	of code coverage, however, fault detection capabilities are not preserved.},
  owner = {Steven},
  timestamp = {2010.02.03}
}

@BOOK{jones10,
  title = {Software Engineering Best Practices},
  publisher = {McGraw Hill},
  year = {2010},
  author = {Capers Jones},
  annote = {Management book on software engineering projects and how best practices
	should be used. Explains all aspects of the project, and how small
	projects and large projects differ.},
  owner = {Steven},
  timestamp = {2010.03.28}
}

@INPROCEEDINGS{joualt06-2,
  author = {Fr\'ed\'eric Jouault and Jean B\'ezivin},
  title = {{KM3}: a {DSL} for Metamodel Specification},
  booktitle = {Proceedings of the 8th IFIP International Conference on Formal Methods
	for Open Object-based Distributed Systems},
  year = {2006},
  file = {:F\:\\studie\\219997 - Graduation Project\\sources\\KM3 A DSL for Metamodel Specification.pdf:PDF},
  owner = {Steven},
  timestamp = {2010.09.15}
}

@INPROCEEDINGS{joualt06,
  author = {F. {Jouault} and I. {Kurtev}},
  title = {On the architectural alignment of {ATL} and {QVT}},
  booktitle = {Proceedings of the 2006 {ACM} symposium on Applied computing, Dijon,
	France},
  year = {2006},
  pages = {1188--1195},
  address = {New York},
  month = {April},
  publisher = {ACM Press},
  abstract = {Transforming models is a critical activity in Model-Driven Engineering
	(MDE). With the expected adoption of the OMG QVT standard for model
	transformation language it is anticipated that the experience in
	applying model transformations in various cases will increase. However,
	the QVT standard is just one possible approach to solving model transformation
	problems. In parallel with the QVT activity many research groups
	and companies have been working on their own model transformation
	approaches and languages. It is important for software developers
	to be able to compare and select the most suitable languages and
	tools for a particular problem. This paper compares the proposed
	QVT language and the ATLAS Transformation Language (ATL) as a step
	in the direction of gathering knowledge about the existing model
	transformation approaches. The focus is on the major language components
	(sublanguages and their features, execution tools, etc.) and how
	they are related. Both languages expose a layered architecture for
	organizing their components. The paper analyzes the layers and compares
	them according to various categories. Furthermore, motivations for
	interoperability between the languages and the related tools are
	given. Possible solutions for interoperability are identified and
	discussed. },
  eprintid = {10012},
  event_type = {Conference},
  howpublished = {http://eprints.eemcs.utwente.nl/10012/},
  id_number = {10.1145/1141277.1141561},
  international = {Yes},
  isbn = {1-59593-108-2},
  ispublished = {Published},
  keywords = {ATL, QVT, interoperability, model engineering, model transformations
	},
  location = {Dijon, France},
  num_pages = {8},
  official_url = {http://doi.acm.org/10.1145/1141277.1141561},
  pres_types = {Talk},
  refereed = {Yes},
  research_groups = {EWI-SE: Software Engineering}
}

@CONFERENCE{kent02,
  author = {Kent, S.},
  title = {{Model-Driven Engineering}},
  booktitle = {Integrated Formal Methods},
  year = {2002},
  pages = {286--298},
  organization = {Springer},
  owner = {Steven},
  timestamp = {2010.07.03}
}

@PHDTHESIS{kurtev05,
  author = {Ivan Kurtev},
  title = {{A}daptability of {M}odel {T}ransformations},
  school = {University of Twente},
  year = {2005},
  annote = {Ivan's PhD dissertation, providing a quick introduction to MDE, metamodels
	and model transformations. Goes on by describing the structure and
	construction of a model transformation language (not used).},
  owner = {Steven},
  timestamp = {2010.02.03}
}

@ARTICLE{lange07,
  author = {Christian F.J. Lange},
  title = {Model Size Matters},
  journal = {Lecture Notes in Computer Science},
  year = {2007},
  volume = {4364},
  pages = {211--216},
  annote = {Defines a set of metrics with relation to model size. Very concise,
	not elaborating much on the metrics defined. Uses \cite{fenton98}
	as an inspiration for defining the metrics.},
  owner = {Steven},
  timestamp = {2010.02.03}
}

@ARTICLE{mccabe76,
  author = {McCabe, TJ},
  title = {A complexity measure},
  journal = {{IEEE Transactions on software Engineering}},
  year = {1976},
  pages = {308--320}
}

@ARTICLE{mcquillan07,
  author = {Jacqueline A. McQuillan},
  title = {On the Application of Software Metrics to {UML} Models},
  journal = {Lecture notes in computer science},
  year = {2007},
  volume = {4364},
  pages = {39--45},
  annote = {The authors discuss whether it is possible to apply current software
	metrics, that are primarily used for source code, on software models.
	They make 9 observations:
	
	\begin{enumerate}
	
	\item Defining model metrics is a metamodeling activity.
	
	\item Implementing metrics that are defined at the metalevel is (almost)
	free.
	
	\item Defining new metrics is (almost regrettably) easy.
	
	\item We can ``lift'' code metrics to the model level.
	
	\item Models can represent partial and/or overlapping information.
	
	\item Differences between metric values are themselves metrics.
	
	\item Metric definitions should be re-usable.
	
	\item The relationship between behavioral models and coverage needs
	to be explored.
	
	\item Standardization is multi-faceted; interoperability is the key.
	
	\end{enumerate}},
  owner = {Steven},
  timestamp = {2010.02.03}
}

@TECHREPORT{mdaguide,
  author = {Joaquin Miller and Jishnu Mukerji},
  title = {{MDA} Guide Version 1.0.1},
  institution = {{Object Management Group}},
  year = {2003},
  type = {{OMG document}},
  annote = {Official OMG document on the use of MDA.},
  owner = {Steven},
  timestamp = {2010.02.16},
  url = {http://www.omg.org/cgi-bin/doc?omg/03-06-01}
}

@CONFERENCE{mohagheghi09,
  author = {P. Mohagheghi},
  title = {Existing model metrics and relations to model quality},
  booktitle = {{Software Quality, 2009. WOSQ '09. ICSE Workshop on 16-16 May 2009}},
  year = {2009},
  pages = {39--45},
  annote = {The author analyzes the relation between current model metrics and
	model quality, and notes that model size metrics are only useful
	for comparing models among each other. An overview is given on existing
	model metrics, and how source code metrics may be used in the context
	of models.},
  owner = {Steven},
  timestamp = {2010.02.03}
}

@INPROCEEDINGS{mohagheghi04,
  author = {Parastoo Mohagheghi and Reidar Conradi and Ole M. Killi and Henrik
	Schwarz},
  title = {An Empirical Study of Software Reuse vs. Defect-Density and Stability},
  booktitle = {{ICSE '04: Proceedings of the 26th International Conference on Software
	Engineering}},
  year = {2004},
  abstract = {The paper describes results of an empirical study,
	
	where some hypotheses about the impact of reuse on
	
	defect-density and stability, and about the impact of
	
	component size on defects and defect-density in the
	
	context of reuse are assessed, using historical data (data
	
	mining) on defects, modification rate, and software size
	
	of a large-scale telecom system developed by Ericsson.
	
	The analysis showed that reused components have lower
	
	defect-density than non-reused ones. Reused components
	
	have more defects with highest severity than the total
	
	distribution, but less defects after delivery, which shows
	
	that that these are given higher priority to fix. There are
	
	an increasing number of defects with component size for
	
	non-reused components, but not for reused components.
	
	Reused components were less modified (more stable) than
	
	non-reused ones between successive releases, even if
	
	reused components must incorporate evolving
	
	requirements from several application products. The
	
	study furthermore revealed inconsistencies and
	
	weaknesses in the existing defect reporting system, by
	
	analyzing data that was hardly treated systematically
	
	before.},
  annote = {The authors correlate different metrics (code reuse, component size)
	and their defect density. They find that reused components have a
	lower defect density than non-reused ones, however, defects in reused
	components have a higher severity rating. Reused components are also
	less often modified.},
  owner = {Steven},
  timestamp = {2010.02.03}
}

@INPROCEEDINGS{monperrus07,
  author = {M. Monperrus and J. Champeau and B. Hoeltzener},
  title = {Counts Count},
  booktitle = {2nd workshop on Model Size Metrics},
  year = {2007},
  annote = {The authors argue that counts are important metrics for model measurement
	and define a model-driven framework that incorporates these count
	metrics.},
  owner = {Steven},
  timestamp = {2010.04.24}
}

@INPROCEEDINGS{mougenot09,
  author = {Alix Mougenot and Alexis Darrasse and Xavier Blanc and Mich`ele Soria},
  title = {Uniform Random Generation of Huge Metamodel Instances},
  booktitle = {Model Driven Architecture - Foundations and Applications},
  year = {2009},
  editor = {Richard F. Paige and Alan Hartman and Arend Rensink},
  series = {Lecture Notes in Computer Science},
  pages = {130--145},
  owner = {Steven},
  timestamp = {2010.09.29}
}

@STANDARD{qvt_spec,
  title = {{Meta Object Facility (MOF) Query/View/Transformation Transformation
	Specification}},
  organization = {{Object Management Group}},
  institution = {{Object Management Group}},
  author = {{Object Management Group}},
  revision = {formal/2008-04-03},
  year = {2008},
  owner = {Steven},
  timestamp = {2010.07.30}
}

@TECHREPORT{uml2spec,
  author = {{Object Management Group}},
  title = {{OMG} {U}nified {M}odeling {L}anguage ({OMG UML}), Infrastructure,
	V2.1.2},
  institution = {{Object Management Group}},
  year = {2007},
  number = {formal/2007-11-04},
  annote = {Infrastructure specification of the Unified Modeling Language v2.1.4.},
  owner = {Steven},
  timestamp = {2010.02.16},
  url = {http://www.omg.org/spec/UML/2.1.2/Infrastructure/PDF}
}

@TECHREPORT{omg05,
  author = {{Object Management Group}},
  title = {{Meta Object Facility (MOF) 2.0 Query/View/Transformation Specification
	Final Adopted Specification ptc/05-11-01}},
  institution = {{Object Management Group}},
  year = {2005},
  type = {{OMG document}},
  annote = {Specification of the OMG MOF 2.0 QVT language.},
  owner = {Steven},
  timestamp = {2010.02.16},
  url = {http://www.omg.org/docs/ptc/05-11-01.pdf}
}

@TECHREPORT{mof20,
  author = {{Object Management Group}},
  title = {{Meta Object Facility (MOF) 2.0 Core Specification}},
  institution = {{Object Management Group}},
  year = {2004},
  type = {{OMG} Adopted Specification},
  number = {ptc/03-10-04},
  annote = {The OMG MOF 2.0 specification.},
  owner = {Steven},
  timestamp = {2010.02.16}
}

@TECHREPORT{omg04,
  author = {{Object Management Group}},
  title = {Metamodel and {UML} Profile for {Java} and {EJB} Specification},
  institution = {{Object Management Group}},
  year = {2004},
  type = {Specification},
  number = {formal/04-02-02},
  annote = {Metamodel and UML profile that specify the Java and EJB languages.},
  owner = {steven},
  timestamp = {2009.10.15}
}

@TECHREPORT{mof14,
  author = {{Object Management Group}},
  title = {{Meta Object Facility ({MOF}) Specification}},
  institution = {{Object Management Group}},
  year = {2002},
  type = {{OMG} Adopted Specification},
  number = {formal/02-04-03},
  annote = {The OMG MOF specification.},
  owner = {Steven},
  timestamp = {2010.02.16}
}

@BOOK{oxford,
  title = {Oxford English Dictionary},
  publisher = {{Oxford Dictionaries}},
  year = {1997},
  editor = {John Simpson},
  author = {{Oxford Dictionaries}},
  volume = {Volume 1 -- 3},
  edition = {2nd},
  owner = {Steven},
  timestamp = {2010.03.12}
}

@ARTICLE{shaw74,
  author = {Shaw, Mary},
  title = {Reduction of compilation costs through language contraction},
  journal = {Communications of the {ACM}},
  year = {1974},
  volume = {17},
  pages = {245--250},
  number = {5},
  abstract = {Programming languages tailored to particular groups of users can often
	be constructed by removing unwanted features from a general purpose
	language. This paper describes the use of simulation techniques to
	predict the savings in compilation cost achievable by such an approach.
	The results suggest a function which describes the effect of changes
	in the power of a language on the compilation cost of an algorithm
	expressed in that language: when features not actually used by the
	algorithm are removed from the language, the cost of compiling the
	algorithm decreases moderately, but when features that are needed
	are removed, the compilation cost increases sharply.},
  address = {New York, NY, USA},
  doi = {http://doi.acm.org/10.1145/360980.360989},
  issn = {0001-0782},
  owner = {Steven},
  publisher = {ACM},
  timestamp = {2010.05.10}
}

@TECHREPORT{siegel01,
  author = {Jon Siegel and {the OMG Staff Strategy Group}},
  title = {Developing in {OMG}'s {Model-Driven Architecture}},
  institution = {{Object Management Group}},
  year = {2001},
  annote = {An introduction to using OMG's MDA in software development processes.},
  owner = {steven},
  timestamp = {2009.09.24}
}

@TECHREPORT{soley00,
  author = {Richard Soley and {the OMG Staff Strategy Group}},
  title = {{Model Driven Architecture}},
  institution = {{Object Management Group}},
  year = {2000},
  type = {{OMG document}},
  month = nov,
  annote = {An introduction to OMG's MDA.},
  owner = {Steven},
  timestamp = {2010.02.16}
}

@ARTICLE{solingen99,
  author = {Solingen, R. and Berghout, E.},
  title = {{The Goal/Question/Metric method}},
  journal = {A Practical Guide for Quality Improvement of Software Development.
	New York, McCraw-Hill Publishers},
  year = {1999},
  owner = {Steven},
  timestamp = {2010.05.12},
  url = {http://www.iteva.rug.nl/gqm/GQM\%20Guide\%20non\%20printable.pdf}
}

@ARTICLE{stobie05,
  author = {Stobie, Keith},
  title = {Too Darned Big to Test},
  journal = {Queue},
  year = {2005},
  volume = {3},
  pages = {30--37},
  number = {1},
  address = {New York, NY, USA},
  annote = {Comments on problems with testing caused by software size and complexity.
	Solutions are, among others, good unit testing, good static analysis
	and good design of the system.},
  doi = {http://doi.acm.org/10.1145/1046931.1046944},
  issn = {1542-7730},
  publisher = {ACM}
}

@BOOK{sudkamp,
  title = {Languages and Machines: An Introduction to the Theory of Computer
	Science},
  publisher = {Addison Wesley},
  year = {1998},
  editor = {Thomas Stone},
  author = {Thomas A. Sudkamp},
  edition = {Second Edition},
  annote = {Introduction to formal computer theory.},
  owner = {Steven},
  timestamp = {2010.03.02}
}

@CONFERENCE{takahashi89,
  author = {M. Takahashi and T. Miyake and S. Hanata},
  title = {Statistically-based program size estimation},
  booktitle = {{Computer Software and Applications Conference, 1989. COMPSAC 89.,
	Proceedings of the 13th Annual International 20-22 Sept. 1989}},
  year = {1989},
  pages = {574--579},
  abstract = {Program size is used as the principal parameter for estimating
	
	the effort required for software development. Program size
	
	estimation, however, has been recognized as one of the most
	
	difficult issues in software engineering research. This paper
	
	presents a model for estimating program size, before coding of
	
	the program begins, based on the complexity of the software.
	
	The complexity of the software is computed from program logic
	
	charts with Halsteads metrics. The relationships between the
	
	complexity of the software and program size are then statistically
	
	analyzed by taking hypothesized environmental factors, such
	
	as program categories, into consideration. Results of an experiment
	
	show that, of Halsteads metrics, N1 is the most significant
	
	and reasonable as a metric for computing the complexity of the
	
	software from program logic charts. The results also show that
	
	the model based on this metric is more reliable than the conventional
	
	size estimation method.},
  annote = {The authors use statistical analysis to find the relationships between
	software complexity and program size. They conclude that N1, as described
	by \cite{halstead}, ``is the most significant and reasonable as a
	metric for computing the complexity of the software from program
	logic charts''.},
  owner = {Steven},
  timestamp = {2010.02.03}
}

@MISC{atl_zoo,
  author = {{The Eclipse Foundation}},
  title = {{ATL Transformations}},
  owner = {Steven},
  timestamp = {2010.07.29},
  url = {http://www.eclipse.org/m2m/atl/atlTransformations/}
}

@TECHREPORT{vepa07,
  author = {\'Eric V\'epa},
  title = {{KM3} to Measure},
  institution = {{INRIA and SODIUS}},
  year = {2007},
  type = {ATL Transformation Example},
  owner = {Steven},
  timestamp = {2010.09.17}
}

@TECHREPORT{vignaga09,
  author = {Adr\'es Vignaga},
  title = {{M}etrics for {M}easuring {ATL} {M}odel {T}ransformations},
  institution = {Universidad de Chile},
  year = {2009},
  owner = {Steven},
  timestamp = {2010.05.11}
}

@CONFERENCE{wang03,
  author = {Yingxu Wang},
  title = {The measurement theory for software engineering},
  booktitle = {{Electrical and Computer Engineering, 2003. IEEE CCECE 2003. Canadian
	Conference on 4-7 May 2003}},
  year = {2003},
  volume = {2},
  pages = {1321--1324},
  abstract = {Metrology is one of the driving forces to the development and maturity
	of engineering disciplines. Measurement and metrics play an important
	rule in software engineering. This paper explores the fundamental
	theories for engineering measurement and their applications in software
	engineering. An axiom-based measurement theory is presented, and
	a generic measurement methodology is explored. The relational measurement
	theories for software engineering, particularly the relation-based
	empirical and formal measurement systems, are systematically developed.
	This paper demonstrates that a software measurement system can be
	described by an algebraic system, therefore new measures may be derived
	based on a core set of meta measures.},
  annote = {The author relates theories in traditional engineering to their applications
	in software engineering.},
  owner = {Steven},
  timestamp = {2010.02.03}
}

@MISC{weil06,
  author = {Frank Weil and Andrij Neczwid},
  title = {Summary of the 2006 Model Size Metrics Workshop},
  year = {2006},
  editor = {T. K\"uhne},
  owner = {Steven},
  timestamp = {2010.04.24}
}

@ARTICLE{wichman84,
  author = {Wichmann, Brian A.wichman84},
  title = {Is {A}da too big? A designer answers the critics},
  journal = {Communications of the {ACM}},
  year = {1984},
  volume = {27},
  pages = {98--103},
  number = {2},
  abstract = {Many have criticized the Department of Defense's new computer language,
	Ada, saying it is too large, too complicated, or too difficult to
	use. Are they right? And are there some simplifications that could
	be made to Ada without destroying its usefulness?},
  address = {New York, NY, USA},
  annote = {The author analyzes the Ada programming language, and discusses 13
	comments on it. He argues that the language may be made easier, however,
	this will result in a trade off of features, which would highly impact
	the usability of the language.},
  doi = {http://doi.acm.org/10.1145/69610.69613},
  issn = {0001-0782},
  owner = {Steven},
  publisher = {ACM},
  review = {ntoaeuhnstaoehuoaeu},
  timestamp = {2010.03.09}
}

@ARTICLE{woodfield79,
  author = {Woodfield, SN},
  title = {An experiment on unit increase in problem complexity},
  journal = {{IEEE Transactions on Software Engineering}},
  year = {1979},
  pages = {76--79}
}

@PROCEEDINGS{bruel06,
  title = {Satellite Events at the MoDELS 2005 Conference, MoDELS 2005 International
	Workshops, Doctoral Symposium, Educators Symposium, Montego Bay,
	Jamaica, October 2-7, 2005, Revised Selected Papers},
  year = {2006},
  editor = {Jean-Michel Bruel},
  volume = {3844},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  booktitle = {MoDELS Satellite Events},
  isbn = {3-540-31780-5}
}

@BOOK{shuxiang07,
  title = {Xiandai Hanyu Cidian},
  publisher = {Commercial Press},
  year = {2007},
  editor = {Lu Shuxiang},
  owner = {Steven},
  timestamp = {2010.04.27}
}

@MANUAL{atl_developerguide,
  title = {{ATL/Developer Guide}},
  organization = {{The Eclipse Foundation}},
  owner = {Steven},
  timestamp = {2010.07.24},
  url = {http://wiki.eclipse.org/ATL/Developer\_Guide}
}

@MANUAL{atl_userguide,
  title = {{ATL/User Guide}},
  organization = {{The Eclipse Foundation}},
  owner = {Steven},
  timestamp = {2010.07.24},
  url = {http://wiki.eclipse.org/ATL/User\_Guide}
}

@MISC{epsilon,
  title = {Epsilon},
  organization = {{The Eclipse Foundation}},
  owner = {Steven},
  timestamp = {2010.11.10},
  url = {http://www.eclipse.org/gmt/epsilon/}
}

@MISC{noncite,
  title = {Citation needed},
  annote = {This is an unreferenced statement which needs a citation.}
}

@MISC{fullempiricaldata,
  title = {Performance experiments with ATL and QVT},
  url  = {http://wwwhome.cs.utwente.nl/~kurtev/ATLQVT/}
}

@MISC{toolcontest,
  title = {Transformation Tools Contest},
  url  = {http://is.tm.tue.nl/staff/pvgorp/events/TTC2011/CfC.pdf}
}



@MISC{tiobe10,
  title = {{TIOBE} Programming Community Index},
  month = {April},
  year = {2010},
  owner = {Steven},
  timestamp = {2010.05.10},
  url = {http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html}
}

@ELECTRONIC{ecore,
  month = mar,
  year = {2008},
  title = {org.eclipse.emf.ecore ({EMF Javadoc})},
  organization = {{T}he {E}clipse {F}oundation},
  url = {http://download.eclipse.org/modeling/emf/emf/javadoc/2.4.0/org/eclipse/emf/ecore/package-summary.html},
  annote = {Javadoc specification of Eclipse Modeling Framework (EMF) Ecore.},
  owner = {Steven},
  timestamp = {2010.02.16}
}

@ELECTRONIC{emf,
  title = {{E}clipse {M}odeling - {EMF})},
  organization = {{T}he {E}clipse {F}oundation},
  url = {http://eclipse.org/modeling/emf/},
  annote = {EMF hompage},
  owner = {Steven},
  timestamp = {2011.12.23}
}

@PROCEEDINGS{msm07,
  title = {$2^{nd}$ workshop on Model Size Metrics},
  year = {2007},
  organization = {Michel R.V. Chaudron and Betty Cheng and Christian Lange and Jacqueline
	McQuillan and Ariadi Nugroho and Andrij Neczwid and Frank Weil},
  annote = {Contains the following papers:
	
	\begin{description}[\setlabelwidth{Class Count and Modeling Effort}]
	
	\item[Counts count] The authors argue that counts are important metrics
	for model measurement and define a model-driven framework that incorporates
	these count metrics.
	
	\item[Measuring the Level of] \item[Abstraction and Detail] \item[of
	Models in the context of MDD] The authors define models as being
	graphs and model transformations as graph transformations. The size
	of model M is then the number of vertexes + the number of edges +
	1 (the graph itself). They continue by defining metrics according
	to this graph view.
	
	\item[On the Relation between] \item[Class Count and Modeling Effort]
	The authors research whether using just class count within a model
	is sufficient to say something about the complexity of a model. The
	result is that this is not the case, an explanation is given for
	this.
	
	\item[Effort distribution in] \item[model based development] The authors
	aim to find how much effort is given per phase in the software engineering
	process. They find that most effort is put in implementation (38\%),
	followed by project management (13\%), testing (12\%), analysis and
	design (11\%) and requirements engineering (8\%). They compare their
	findings with the RUP hump diagrams and find that these are ``surprisingly
	accurate''. They do note that the original RUP hump diagrams are
	not drawn for model-based development.
	
	\item[Complexity Measurement] \item[of Goal Driven Requirements] The
	author proposes a metric for requirement complexity. He finds that
	``goal-driven analysis would provide better estimation at the requirements
	level than function points''.
	
	\end{description}},
  owner = {Steven},
  timestamp = {2010.03.29}
}

@MANUAL{atl_vm,
  title = {Specification of the {ATL Virtual Machine}},
  organization = {{ATLAS group}},
  edition = {v0.1},
  year = {2005},
  owner = {Steven},
  timestamp = {2010.07.26}
}

@STANDARD{iso25000,
  title = {Software Engineering - Software product Quality Requirements and
	Evaluation ({SQuaRE})},
  organization = {{ISO/IEC}},
  institution = {{ISO/IEC}},
  number = {25000},
  revision = {2005-08-01},
  year = {2005},
  owner = {Steven},
  timestamp = {2010.05.12}
}

@STANDARD{iso15939,
  title = {Software Engineering - Software Measurement Process Framework},
  organization = {{ISO/IEC}},
  institution = {{ISO/IEC}},
  type = {CD Ballot},
  number = {15939},
  revision = {2000-02-03},
  year = {2000},
  owner = {Steven},
  timestamp = {2010.06.07}
}

@BOOK{Fenton1996,
  author       = {N. E. Fenton and S. L. Pfleeger},
  title        = {{S}oftware {M}etrics: {A} {R}igorous \& {P}ractical {A}pproach},
  year         = {1996},
  publisher    = {PWS Publishing Co.},
  edition      = {2nd},
}

@INPROCEEDINGS{Amstel2010_ATL,
  author       = {M. F. van Amstel and M. G. J. van den Brand},
  title        = {{Q}uality {A}ssessment of {ATL} {M}odel {T}ransformations using {M}etrics},
  booktitle    = {Proceedings of the 2nd International Workshop on Model Transformation with ATL (MtATL'10)},
  year         = {2010},
  month        = jun,
  address      = {Malaga, Spain},
}

@INPROCEEDINGS{Amstel2010_metrics,
  author       = {M. F. van Amstel and M. G. J. van den Brand and P. H. Nguyen},
  title        = {{M}etrics for {M}odel {T}ransformations},
  booktitle    = {Proceedings of the Ninth Belgian-Netherlands Software Evolution Workshop (BENEVOL'10)},
  year         = {2010},
  month        = dec,
  address      = {Lille, France},
}

@INPROCEEDINGS{Kapova2010,
  author       = {L. Kapova and T. Goldschmidt and S. Becker and J. Henss},
  title        = {{E}valuating {M}aintainability with {C}ode {M}etrics for {M}odel-to-{M}odel {T}ransformations},
  booktitle    = {Proceedings of the 6th International Conference on the Quality of Software Architectures (QoSA'10)},
  year         = {2010},
  volume       = {6093},
  series       = {Lecture Notes in Computer Science},
  publisher    = {Springer},
}
